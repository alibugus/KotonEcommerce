@model EcommerceProject.Models.ShopViewModel

<div class="row">
    @foreach (var product in Model.Products)
    {
        <div class="col-lg-4 col-md-6 col-sm-6" data-product-id="@product.Id">
            <div class="product__item @(product.StockQuantity > 0 ? "" : "out-of-stock")">
                <div class="product__item__pic set-bg" data-setbg="@product.ImageUrl">
                    @if (product.StockQuantity <= 0)
                    {
                        <span class="label">Out of Stock</span>
                    }
                    <ul class="product__hover">
                        <li>
                            <a href="#" onclick="AddToWishList(@product.Id); return false;">
                                <img class="wishlist-icon" src="img/icon/heart.png" alt="Add to Wishlist">
                            </a>
                        </li>
                        <li>
                            <a href="#">
                                <img src="img/icon/compare.png" alt="Compare">
                                <span>Compare</span>
                            </a>
                        </li>
                        <li><a href="#"><img src="img/icon/search.png" alt="Search"></a></li>
                    </ul>
                </div>
                <div class="product__item__text">
                    <h6>@product.Name</h6>
                    <a href="#" class="add-cart" onclick="AddToCart(@product.Id, 1); return false;">+ Add To Cart</a>
                    <div class="rating">
                        @for (int i = 0; i < 5; i++)
                        {
                            <i class="fa @(i < 4 ? "fa-star" : "fa-star-o")"></i>
                        }
                    </div>
                    <h5>@product.Price.ToString("C")</h5>
                    <div class="product__color__select">
                        <label for="pc-@product.Id-1">
                            <input type="radio" id="pc-@product.Id-1" @(product.Color == "Black" ? "checked" : "")>
                        </label>
                        <label class="active black" for="pc-@product.Id-2">
                            <input type="radio" id="pc-@product.Id-2" @(product.Color == "Black" ? "checked" : "")>
                        </label>
                        <label class="grey" for="pc-@product.Id-3">
                            <input type="radio" id="pc-@product.Id-3" @(product.Color == "Grey" ? "checked" : "")>
                        </label>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div id="feedback" style="margin-top: 20px;"></div>

<!-- Login/Register Modal -->
<div class="modal fade" id="loginModal" tabindex="-1" aria-labelledby="loginModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0" style="border-radius: 10px;">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="loginModalLabel">Login or Register</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" style="background-color: #f8f9fa;">
                <p class="text-center mb-4">Please log in or register to proceed with your checkout.</p>
                <div class="d-flex justify-content-around">
                    <a href="@Url.Action("Index", "Login")" class="btn btn-dark text-white">Login</a>
                    <a href="@Url.Action("Index", "Register")" class="btn btn-outline-dark">Register</a>
                </div>
                <div class="text-center mt-3">
                    <button type="button" class="btn btn-outline-secondary" onclick="kapat()" id="continueAsGuestBtn">Continue as Guest </button>
                </div>
            </div>
        </div>
    </div>
</div>






<script type="text/javascript">
    $(document).ready(function () {
        setTimeout(function () {
            $('.product__item').each(function () {
                var productId = $(this).closest('div[data-product-id]').data('product-id');
                console.log("Product ID:", productId);
                checkIfProductInWishList(productId, $(this));
            });
        }, 100);
    });
    function kapat() {
        var myModalEl = document.getElementById('loginModal');
        var myModal = bootstrap.Modal.getInstance(myModalEl);
        if (myModal) {
            myModal.hide();
        } else {
            var myModal = new bootstrap.Modal(myModalEl);
            myModal.hide();
        }
    }



    function AddToCart(productId, quantity) {
        console.log("AddToCart called with productId:", productId, "quantity:", quantity);
        $.ajax({
            url: '@Url.Action("AddToCart", "ShopCart")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ ProductId: productId, Quantity: quantity }),
            success: function (response) {
                if (response.success) {
                    $('#feedback').html('<div class="alert alert-success">' + response.message + '</div>');
                } else {
                    $('#feedback').html('<div class="alert alert-danger">' + response.message + '</div>');
                }
            },
            error: function (xhr, status, error) {
                $('#feedback').html('<div class="alert alert-danger">An error occurred: ' + error + '</div>');
            }
        });
    }

    function checkIfProductInWishList(productId, productElement) {
        $.ajax({
            url: '@Url.Action("IsProductInWishList", "WishList")',
            type: 'POST',
            dataType: 'json',
            data: { productId: productId },
            success: function (response) {
                if (response.inWishList) {
                    console.log("check " + productId);
                    productElement.find('.wishlist-icon').attr('src', 'img/icon/heart-filled.png');
                } else {
                    console.log("checkme " + productId);
                    productElement.find('.wishlist-icon').attr('src', 'img/icon/heart.png');
                }
            },
            error: function (xhr, status, error) {
                console.log('Error:', error);
            }
        });
    }

    function AddToWishList(productId) {
        event.preventDefault(); // Prevent the default behavior of the anchor tag
        console.log("AddToWishList called with productId:", productId);

        // Check if the user is authenticated
        var isAuthenticated = '@User.Identity.IsAuthenticated';
        if (isAuthenticated === 'False') {
            // Show the login modal if the user is not authenticated
            var myModal = new bootstrap.Modal(document.getElementById('loginModal'));
            myModal.show();
            return;
        }

        $.ajax({
            url: '@Url.Action("ToggleWishList", "WishList")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ ProductId: productId }),
            success: function (response) {
                if (response.success) {
                    console.log("ProductId in success response:", productId);
                    $('#feedback').html('<div class="alert alert-success">' + response.message + '</div>');
                    var iconSrc = response.inWishList ? 'img/icon/heart-filled.png' : 'img/icon/heart.png';
                    $('div[data-product-id="' + productId + '"] .wishlist-icon').attr('src', iconSrc);
                } else {
                    console.log("ProductId in error response:", productId);
                    $('#feedback').html('<div class="alert alert-danger">' + response.message + '</div>');
                }
            },
            error: function (xhr, status, error) {
                console.log("ProductId in error handler:", productId);
                $('#feedback').html('<div class="alert alert-danger">An error occurred: ' + error + '</div>');
            }
        });
    }

    // Close the modal when the "Continue as Guest" button is clicked
   

    // Bootstrap modal automatically handles the close button and click outside functionality
</script>

